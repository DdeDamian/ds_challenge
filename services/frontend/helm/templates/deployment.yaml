apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "frontend.chart" . }}
  {{- if .Values.deployment.annotations }}
  annotations:
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
  {{- end }}
spec:
{{- if eq .Values.autoscaling.enabled false }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.strategy }}
  strategy:
  {{- toYaml .Values.strategy | nindent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        timestamp: {{ now | quote }}
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
    {{- if .Values.affinity }}
      affinity:
      {{- toYaml .Values.affinity | nindent 8 }}
    {{- end }}
    {{- if .Values.enableSecurityContext }}
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
    {{- end }}
      volumes:
      {{- if .Values.deployment.certs.enabled }}
      - name: {{ .Release.Name }}-certs
        secret:
          secretName: {{ .Release.Name }}-certs
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ default .Chart.Version .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.enableProbes }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.deployment.certs.enabled }}
        - name: {{ .Release.Name }}-certs
          mountPath: /app/certs
          readOnly: true
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-configmap
        - secretRef:
            name: {{ .Release.Name }}-secrets
        ports:
        - containerPort: {{ .Values.service.targetPort }}
        {{- if .Values.enableResources }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecretName }}
